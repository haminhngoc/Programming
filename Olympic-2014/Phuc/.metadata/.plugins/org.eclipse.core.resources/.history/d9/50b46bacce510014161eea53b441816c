import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		Init(System.in);

		long x = nextLong();
		if (x == 1) {
			System.out.println(2);
			return;
		}

		long min = x;
		long end = (long) Math.sqrt(x);
		long arr[] = new long[(int) (end + 1)];
		Arrays.fill(arr, 1);

		for (int i = 2; i <= end; ++i) {
			if (x % i == 0 && x / i - 1 > i && x / i - 1 < min) {
				min = x / i - 1;
			}
		}
		int z = (int) (Math.log(x) / Math.log(2) + 1);
		for (int i = 1; i <= z; ++i) {
			for (int j = 2; j <= end; ++j) {
				if (x / arr[j] <= j) {
					break;
				}

				arr[j] += Math.pow(j, i);

				if (x % arr[j] == 0 && x / arr[j] < j) {
					min = Math.min(min, j);
				}
			}
		}

		System.out.println(min);
	}

	static BufferedReader reader;
	static StringTokenizer tokenizer;

	static void Init(InputStream input) {
		reader = new BufferedReader(new InputStreamReader(input));
		tokenizer = new StringTokenizer("");
	}

	static String next() throws IOException {
		while (!tokenizer.hasMoreTokens()) {
			tokenizer = new StringTokenizer(reader.readLine());
		}
		return tokenizer.nextToken();
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	static Double NextDouble() throws IOException {
		return Double.parseDouble(next());
	}
}
