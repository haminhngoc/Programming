import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		Init(System.in);

		int n = nextInt();

		long x[] = new long[n];
		long y[] = new long[n];

		for (int i = 0; i < n; ++i) {
			x[i] = nextLong();
			y[i] = nextLong();
		}

		long min = -1;

		for (int i = 0; i < n; ++i) {
			long c = 0;
			for (int j = i + 1; j < n; ++j) {

				double a = distance(x[i], y[i], x[j], y[j]);
				for (int k = j + 1; k < n; ++k) {
					double b = distance(x[i], y[i], x[j], y[j]);
				}
			}
		}

	}

	double distance(long x, long y, long x2, long k2) {
		return Math.sqrt((x - x2) * (x - x2) + (y - k2) * (y - k2));
	}

	static BufferedReader reader;
	static StringTokenizer tokenizer;

	static void Init(InputStream input) {
		reader = new BufferedReader(new InputStreamReader(input));
		tokenizer = new StringTokenizer("");
	}

	static String next() throws IOException {
		while (!tokenizer.hasMoreTokens()) {
			tokenizer = new StringTokenizer(reader.readLine());
		}
		return tokenizer.nextToken();
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	static Double NextDouble() throws IOException {
		return Double.parseDouble(next());
	}
}
