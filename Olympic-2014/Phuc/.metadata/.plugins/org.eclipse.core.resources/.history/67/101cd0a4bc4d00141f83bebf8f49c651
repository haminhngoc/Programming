import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		Init(System.in);

		int n = nextInt();
		int k = nextInt();
		long sum[] = new long[n + 1];
		int z = (int) (1e9 + 7);
		for (int i = 0; i < n; ++i) {
			long t = nextLong();

			sum[i + 1] = sum[i] + t;
		}

		if (sum[n] == 0) {
			long count = 0;
			for (int i = 1; i <= n; ++i) {
				if (sum[i] == 0) {
					count++;
				}
			}

			long re = 1;
			for (int i = n - 1; i > n - k; ++i) {
				re *= n;
				re %= z;
			}
			
			System.out.println(re);return;
		}
		if(sum[n]%k!=0){
			System.out.println(0);
			return;
		}
		
		long t = sum[n]\k;
		
	}

	static BufferedReader reader;
	static StringTokenizer tokenizer;

	static void Init(InputStream input) {
		reader = new BufferedReader(new InputStreamReader(input));
		tokenizer = new StringTokenizer("");
	}

	static String next() throws IOException {
		while (!tokenizer.hasMoreTokens()) {
			tokenizer = new StringTokenizer(reader.readLine());
		}
		return tokenizer.nextToken();
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	static Double NextDouble() throws IOException {
		return Double.parseDouble(next());
	}
}
