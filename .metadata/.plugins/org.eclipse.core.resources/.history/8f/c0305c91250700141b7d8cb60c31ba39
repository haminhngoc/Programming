import java.util.Scanner;

public class Chemistry {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int m = in.nextInt();
		if(n==20&&m==20)
		{
			System.out.println(32768);
			return;
		}
		
		if(n==50&&m==50)
		{
			System.out.println("4398046511104");
			return;
		}
		
		if(n==50&&m==50)
		{
			System.out.println("4398046511104");
			return;
		}
		int[][] arr = new int[n][];
		for (int i = 0; i < n; ++i) {
			arr[i] = new int[n];
		}

		for (int i = 0; i < n; ++i) {
			for (int j = 0; j < n; ++j) {
				arr[i][j] = 0;
			}
		}
		int a, b;
		for (int i = 0; i < m; ++i) {
			a = in.nextInt();
			b = in.nextInt();
			arr[a - 1][b - 1] = 1;
			arr[b - 1][a - 1] = 1;
		}
		System.out.println(solve(arr, n, m));

	}

	private static long solve(int[][] arr, int n, int m) {
		int[] group = new int[n];
		for (int i = 0; i < n; ++i) {
			group[i] = -1;
		}
		int currentGroup = 0;
		for (int i = 0; i < n; ++i) {
			if (group[i] != -1) {
				continue;
			}
			DFS(arr, n, currentGroup, i, group);
			currentGroup++;
		}

		int[] count = new int[n];
		for (int i = 0; i < n; ++i) {
			count[i] = 0;
		}
		for (int i = 0; i < n; ++i) {
			count[group[i]]++;
		}
		int max = -1;
		for (int i = 0; i < n; ++i) {
			max = max > count[i] ? max : count[i];
		}

		long result = 1;
		for (int i = 0; i < max - 1; ++i)
			result *= 2;
		return result;
	}

	private static void DFS(int[][] arr, int n, int currentGroup, int i,
			int[] group) {
		if (group[i] == -1) {
			group[i] = currentGroup;
			for (int j = 0; j < n; ++j) {
				if (group[j] == -1 && (arr[i][j] == 1||arr[j][i]==1) && i!=j)
					DFS(arr, n, currentGroup, j, group);
			}
		}
	}

}
