import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.*;

public class JzzhuAndSequences {

    public static void main(String[] args) {

        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskB solver = new TaskB();
        solver.solve(in, out);
        out.close();
    }
}

class TaskB {

    public void solve(InputReader in, PrintWriter out) {
        long modulo = (int) 1e9 + 7;
        long fi = 0;
        long x, y, n;
        long temp = 1;
        x = in.nextLong();
        y = in.nextLong();
        n = in.nextLong();
        temp = ((n-1) / 3) % 2 == 1 ? -1 : 1;
        if (n % 3 == 1) {
            fi = x * temp;
        }
        if (n % 3 == 2) {
            fi = y * temp;
        }
        if (n % 3 == 0) {
            fi = (y - x) * temp;
        }
        fi = fi%modulo;
        if (fi < 0)
            fi += modulo;
        out.println(fi);
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

}