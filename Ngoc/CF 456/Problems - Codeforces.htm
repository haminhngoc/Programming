<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<!-- saved from url=(0042)http://codeforces.com/contest/456/problems -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="X-Csrf-Token" content="dcg2eac47e4646g822e3d6e70fbag860">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="p1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-en.png">
    <meta property="og:title" content="Problems - Codeforces">
    <meta property="og:site_name" content="Codeforces">
    
    <meta name="cc" content="1bj0e0jzar6qx">
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Problems - Codeforces</title>
        <meta name="description" content="Codeforces. Programming competitions and contests, programming community">
        <meta name="keywords" content="programming algorithm contest competition informatics olympiads c++ java graphs vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="./Problems - Codeforces_files/font-awesome.min.css" type="text/css" charset="utf-8">

        <link href="./Problems - Codeforces_files/css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://worker.codeforces.ru/static/favicon.png">

    <!--CombineResourcesFilter-->
    <link charset="utf-8" href="./Problems - Codeforces_files/2efacdd0e5f54ef6bba27854086632b9_e6c7bbf7f2db4d1fd3c962dc7382f2e.css" rel="stylesheet" type="text/css">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
        

    <script type="text/javascript" async="" src="./Problems - Codeforces_files/ga.js"></script><script src="./Problems - Codeforces_files/89b3ee750b2212159cecc5edcdb53b8e_fea11fc7deebf9a46491423e00bd8b9.js" type="text/javascript"> </script>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="./Problems - Codeforces_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/style(1).css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="./Problems - Codeforces_files/share.js" charset="utf-8"></script>
    
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.markitup.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->


</head>
<body><span style="display:none;" class="csrf-token" data-csrf="dcg2eac47e4646g822e3d6e70fbag860">&nbsp;</span>
<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="http://codeforces.com/"><img src="./Problems - Codeforces_files/codeforces-logo-with-upper-beta.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/456/problems?locale=en"><img src="./Problems - Codeforces_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/456/problems?locale=ru"><img src="./Problems - Codeforces_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;" class="caption">Codeforces Round #260 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Laptops</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>One day Dima and Alex had an argument about the price and quality of laptops. Dima thinks that the more expensive a laptop is, the better it is. Alex disagrees. Alex thinks that there are two laptops, such that the price of the first laptop is less (strictly smaller) than the price of the second laptop but the quality of the first laptop is higher (strictly greater) than the quality of the second laptop.</p><p>Please, check the guess of Alex. You are given descriptions of <span class="tex-span"><i>n</i></span> laptops. Determine whether two described above laptops exist.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains an integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — the number of laptops.</p><p>Next <span class="tex-span"><i>n</i></span> lines contain two integers each, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>, where <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> is the price of the <span class="tex-span"><i>i</i></span>-th laptop, and <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> is the number that represents the quality of the <span class="tex-span"><i>i</i></span>-th laptop (the larger the number is, the higher is the quality).</p><p>All <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> are distinct. All <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> are distinct. </p></div><div class="output-specification"><div class="section-title">Output</div><p>If Alex is correct, print "<span class="tex-font-style-tt">Happy Alex</span>", otherwise print "<span class="tex-font-style-tt">Poor Alex</span>" (without the quotes).</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>2<br>1 2<br>2 1<br></pre></div><div class="output"><div class="title">Output</div><pre>Happy Alex<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Fedya and Maths</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Fedya studies in a gymnasium. Fedya's maths hometask is to calculate the following expression:</p><center class="tex-equation"><span class="tex-span">(1<sup class="upper-index"><i>n</i></sup> + 2<sup class="upper-index"><i>n</i></sup> + 3<sup class="upper-index"><i>n</i></sup> + 4<sup class="upper-index"><i>n</i></sup>)&nbsp;<i>mod</i>&nbsp;5</span></center><p>for given value of <span class="tex-span"><i>n</i></span>. Fedya managed to complete the task. Can you? Note that given number <span class="tex-span"><i>n</i></span> can be extremely large (e.g. it can exceed any integer type of your programming language).</p></div><div class="input-specification"><div class="section-title">Input</div><p>The single line contains a single integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">0 ≤ <i>n</i> ≤ 10<sup class="upper-index">10<sup class="upper-index">5</sup></sup></span>). The number doesn't contain any leading zeroes.</p></div><div class="output-specification"><div class="section-title">Output</div><p>Print the value of the expression without leading zeros.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>4<br></pre></div><div class="output"><div class="title">Output</div><pre>4<br></pre></div><div class="input"><div class="title">Input</div><pre>124356983594583453458888889<br></pre></div><div class="output"><div class="title">Output</div><pre>0<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p>Operation <span class="tex-span"><i>x</i>&nbsp;<i>mod</i>&nbsp;<i>y</i></span> means taking remainder after division <span class="tex-span"><i>x</i></span> by <span class="tex-span"><i>y</i></span>.</p><p>Note to the first sample:</p><p><img align="middle" class="tex-formula" src="./Problems - Codeforces_files/825f244180bb10323db01645118c3cfdb312fa89.png"></p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Boredom</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Alex doesn't like boredom. That's why whenever he gets bored, he comes up with games. One long winter evening he came up with a game and decided to play it.</p><p>Given a sequence <span class="tex-span"><i>a</i></span> consisting of <span class="tex-span"><i>n</i></span> integers. The player can make several steps. In a single step he can choose an element of the sequence (let's denote it <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub></span>) and delete it, at that all elements equal to <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub> + 1</span> and <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub> - 1</span> also must be deleted from the sequence. That step brings <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub></span> points to the player. </p><p>Alex is a perfectionist, so he decided to get as many points as possible. Help him.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) that shows how many numbers are in Alex's sequence. </p><p>The second line contains <span class="tex-span"><i>n</i></span> integers <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">5</sup></span>).</p></div><div class="output-specification"><div class="section-title">Output</div><p>Print a single integer — the maximum number of points that Alex can earn.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>2<br>1 2<br></pre></div><div class="output"><div class="title">Output</div><pre>2<br></pre></div><div class="input"><div class="title">Input</div><pre>3<br>1 2 3<br></pre></div><div class="output"><div class="title">Output</div><pre>4<br></pre></div><div class="input"><div class="title">Input</div><pre>9<br>1 2 1 3 2 2 2 2 3<br></pre></div><div class="output"><div class="title">Output</div><pre>10<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p>Consider the third test example. At first step we need to choose any element equal to <span class="tex-span">2</span>. After that step our sequence looks like this <span class="tex-span">[2, 2, 2, 2]</span>. Then we do <span class="tex-span">4</span> steps, on each step we choose any element equals to <span class="tex-span">2</span>. In total we earn <span class="tex-span">10</span> points.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. A Lot of Games</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Andrew, Fedor and Alex are inventive guys. Now they invent the game with strings for two players.</p><p>Given a group of <span class="tex-span"><i>n</i></span> non-empty strings. During the game two players build the word together, initially the word is empty. The players move in turns. On his step player must add a single letter in the end of the word, the resulting word must be prefix of at least one string from the group. A player loses if he cannot move.</p><p>Andrew and Alex decided to play this game <span class="tex-span"><i>k</i></span> times. The player who is the loser of the <span class="tex-span"><i>i</i></span>-th game makes the first move in the <span class="tex-span">(<i>i</i> + 1)</span>-th game. Guys decided that the winner of all games is the player who wins the last (<span class="tex-span"><i>k</i></span>-th) game. Andrew and Alex already started the game. Fedor wants to know who wins the game if both players will play optimally. Help him.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains two integers, <span class="tex-span"><i>n</i></span> and <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>; <span class="tex-span">1 ≤ <i>k</i> ≤ 10<sup class="upper-index">9</sup></span>).</p><p>Each of the next <span class="tex-span"><i>n</i></span> lines contains a single non-empty string from the given group. The total length of all strings from the group doesn't exceed <span class="tex-span">10<sup class="upper-index">5</sup></span>. Each string of the group consists only of lowercase English letters.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If the player who moves first wins, print "<span class="tex-font-style-tt">First</span>", otherwise print "<span class="tex-font-style-tt">Second</span>" (without the quotes).</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>2 3<br>a<br>b<br></pre></div><div class="output"><div class="title">Output</div><pre>First<br></pre></div><div class="input"><div class="title">Input</div><pre>3 1<br>a<br>b<br>c<br></pre></div><div class="output"><div class="title">Output</div><pre>First<br></pre></div><div class="input"><div class="title">Input</div><pre>1 2<br>ab<br></pre></div><div class="output"><div class="title">Output</div><pre>Second<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 2em;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Civilization</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Andrew plays a game called "Civilization". Dima helps him.</p><p>The game has <span class="tex-span"><i>n</i></span> cities and <span class="tex-span"><i>m</i></span> bidirectional roads. The cities are numbered from <span class="tex-span">1</span> to <span class="tex-span"><i>n</i></span>. Between any pair of cities there either is a single (unique) path, or there is no path at all. A path is such a sequence of distinct cities <span class="tex-span"><i>v</i><sub class="lower-index">1</sub>, <i>v</i><sub class="lower-index">2</sub>, ..., <i>v</i><sub class="lower-index"><i>k</i></sub></span>, that there is a road between any contiguous cities <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i> + 1</sub></span> (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>k</i></span>). The length of the described path equals to <span class="tex-span">(<i>k</i> - 1)</span>. We assume that two cities lie in the same region if and only if, there is a path connecting these two cities.</p><p>During the game events of two types take place:</p><ol> <li> Andrew asks Dima about the length of the longest path in the region where city <span class="tex-span"><i>x</i></span> lies. </li><li> Andrew asks Dima to merge the region where city <span class="tex-span"><i>x</i></span> lies with the region where city <span class="tex-span"><i>y</i></span> lies. If the cities lie in the same region, then no merging is needed. Otherwise, you need to merge the regions as follows: choose a city from the first region, a city from the second region and connect them by a road so as to minimize the length of the longest path in the resulting region. If there are multiple ways to do so, you are allowed to choose any of them. </li></ol><p>Dima finds it hard to execute Andrew's queries, so he asks you to help him. Help Dima.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains three integers <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span>; <span class="tex-span">0 ≤ <i>m</i> &lt; <i>n</i></span>; <span class="tex-span">1 ≤ <i>q</i> ≤ 3·10<sup class="upper-index">5</sup></span>) — the number of cities, the number of the roads we already have and the number of queries, correspondingly.</p><p>Each of the following <span class="tex-span"><i>m</i></span> lines contains two integers, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>;</span> <span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>). These numbers represent the road between cities <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. There can be at most one road between two cities.</p><p>Each of the following <span class="tex-span"><i>q</i></span> lines contains one of the two events in the following format:</p><ul> <li> <span class="tex-span">1</span> <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>. It is the request Andrew gives to Dima to find the length of the maximum path in the region that contains city <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>). </li><li> <span class="tex-span">2</span> <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>. It is the request Andrew gives to Dima to merge the region that contains city <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> and the region that contains city <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>). Note, that <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> can be equal to <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>. <ul></ul></li></ul></div><div class="output-specification"><div class="section-title">Output</div><p>For each event of the first type print the answer on a separate line.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>6 0 6<br>2 1 2<br>2 3 4<br>2 5 6<br>2 3 2<br>2 5 3<br>1 1<br></pre></div><div class="output"><div class="title">Output</div><pre>4<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>

    <br style="clear:both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2014 Mike Mirzayanov</div>
        <div>The only programming contests Web 2.0 platform</div>

    </div>
</div>
</div>


<!-- /Page: CompleteProblemsViewPage.ftl --><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>