import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

import javax.jws.Oneway;

class Main {

	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task solver = new Task();
		solver.solve(in, out);
		out.close();
	}
}

class Task {
	static InputReader in;

	public void solve(InputReader in, PrintWriter out) {
		this.in = in;
		int t = in.nextInt();
		// long[] cache = find();
		for (int i = 1; i <= t; ++i) {
			System.out.print("Case " + i + ": ");
			solve();
		}
	}

	private void solve() {
		long m = in.nextLong();
		long n = in.nextLong();
		long sum = 2;
		long min = Math.min(m, n);
		long max = Math.max(m, n);
		long result = 0;
		for (; sum <= min; ++sum) {

			long mid = sum / 2 + 1;
			long s = (mid + sum) * (sum - mid + 1) / 2;
			s = s << 1;
			if ((sum & 1) == 1) {
				s -= mid;
			}
			s *= (min - sum + 1);
			result += s;
		}
		
		
	}
}

class InputReader {
	BufferedReader reader;
	StringTokenizer tokenizer;

	public InputReader(InputStream inputStream) {
		reader = new BufferedReader(new InputStreamReader(inputStream), 32768);
		tokenizer = null;
	}

	public String next() {
		while (tokenizer == null || !tokenizer.hasMoreTokens()) {
			try {
				tokenizer = new StringTokenizer(reader.readLine());
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return tokenizer.nextToken();
	}

	public int nextInt() {
		return Integer.parseInt(next());
	}

	public long nextLong() {
		return Long.parseLong(next());
	}

	public double nextDouble() {
		return Double.parseDouble(next());
	}
}
