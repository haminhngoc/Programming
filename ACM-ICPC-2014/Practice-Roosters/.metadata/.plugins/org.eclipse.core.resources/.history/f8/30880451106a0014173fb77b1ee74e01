import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

class Main {

	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task solver = new Task();
		solver.solve(in, out);
		out.close();
	}

}

class Task {
	public void solve(InputReader in, PrintWriter out) {
		int nTest = in.nextInt();
		for (int id = 1; id <= nTest; ++id) {
			long l = in.nextLong();
			long m = in.nextInt();
			long n = in.nextInt();

			long res = 0;
			l *= l;
			long temp = l - m;
			long current = 1;
			long BASE = (long) (1e12 + 7);
			for (long i = l; i > temp; --i) {
				current *= i;
				current = current % BASE;
			}

			// System.out.println(current);

			for (long i = m; i <= n; ++i) {
				res += current;
				current *= temp--;
				current = current % BASE;
				res %= BASE;
			}
			System.out.println("Case " + id + ": " + res);

			// out.printf("Case %d: %d\n", id, res);
		}
	}

	int lowerBound(int[] a, int key) {
		int l = 0;
		int r = a.length - 1;
		int mid = (l + r) >> 1;
		while (l != mid && r != mid) {
			if (a[mid] > key) {
				r = mid;
			} else {
				l = mid;
			}
			mid = (l + r) >> 1;
		}
		return mid;
	}
}

class InputReader {
	BufferedReader reader;
	StringTokenizer tokenizer;

	InputReader(InputStream stream) {
		reader = new BufferedReader(new InputStreamReader(stream), 32768);
		tokenizer = null;
	}

	public String next() {
		while (tokenizer == null || !tokenizer.hasMoreTokens()) {
			try {
				tokenizer = new StringTokenizer(reader.readLine());
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return tokenizer.nextToken();
	}

	public int nextInt() {
		return Integer.parseInt(next());
	}

	public long nextLong() {
		return Long.parseLong(next());
	}
}